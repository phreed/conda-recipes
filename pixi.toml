"$schema" = "https://pixi.sh/v0.36.0/schema/manifest/schema.json"

[project]
name = "conda-recipes"
description = "A pre-build before going to conda-forge"
version = "0.1.0"
license = "BSD-3-Clause"
license-file = "LICENSE.txt"
authors = ["@mesomorph"]
channels = ["mesomorph", "conda-forge"]
platforms = [
    "linux-64",
    "linux-aarch64",
    "osx-64",
    "osx-arm64",
    "win-64",
    ]

[feature.python.dependencies]
python = "3.12.*"

[feature.build.dependencies]
rattler-build-conda-compat = ">=1.2.0,<2.0.0a0"

[feature.linux]
platforms = ["linux-64", "linux-aarch64", "osx-64", "osx-arm64", "win-64"]
[feature.linux.tasks.build-linux]
description = "build for Linux inside a linux container"
cmd = "python .scripts/build-locally.py"
env = { BUILD_LOCALLY_FILTER = "linux*" }


[feature.conda-smithy.dependencies]
conda-smithy = ">=3.44.6,<4"
[feature.conda-smithy.tasks.lint]
description = "validate all recipes with `conda-smithy`"
cmd = "conda-smithy recipe-lint --conda-forge packages/*"

[environments]
# linux only needs Python to run build-locally.py. Everything else happens in a linux container.
linux = ["linux", "python"]
build = ["python", "build"]
conda-smithy = ["python", "conda-smithy"]

[tasks]
promote = { cmd = [
    "echo",
    "eventually, this will generate a 'staged-recipe' suitable for `conda-forge` submission.",
] }

build = { cmd = [
    "rattler-build",
    "build",
    "--recipe", "./packages/$PKG",
    "--target-platform", "linux-64", 
    "--channel", "mesomorph", 
    "--channel", "conda-forge" ],  env = { PKG = "*" } }

[dependencies]
rattler-build = ">=0.38.0,<0.39"
