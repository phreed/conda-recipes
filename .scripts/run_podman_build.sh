#!/usr/bin/env bash

# NOTE: This script has been adapted from content generated by github.com/conda-forge/conda-smithy

source .scripts/logging_utils.sh

( startgroup "Configure Podman" ) 2> /dev/null

set -xeo pipefail

REPO_ROOT=$(cd "$(dirname "$0")/.."; pwd;)
ARTIFACTS="$REPO_ROOT/build_artifacts"
THISDIR="$( cd "$( dirname "$0" )" >/dev/null && pwd )"
PROVIDER_DIR="$(basename "$THISDIR")"
AZURE="${AZURE:-False}"

podman info

# In order for the conda-build process in the container to write to the mounted
# volumes, we need to run with the same id as the host machine, which is
# normally the owner of the mounted volumes, or at least has write permission
HOST_USER_ID=$(id -u)
# Check if podman-machine is being used (normally on OSX) and get the uid from
# the VM
if hash podman-machine 2> /dev/null && podman-machine active > /dev/null; then
    HOST_USER_ID=$(podman-machine ssh $(podman-machine active) id -u)
fi

if [ -z "${PODMAN_IMAGE}" ]; then
    SHYAML_INSTALLED="$(shyaml -h || echo NO)"
    if [ "${SHYAML_INSTALLED}" == "NO" ]; then
        echo "WARNING: PODMAN_IMAGE variable not set and shyaml not installed. Trying to parse with coreutils"
        PODMAN_IMAGE=$(cat .ci_support/${CONFIG}.yaml | grep '^podman_image:$' -A 1 | tail -n 1 | cut -b 3-)
        if [ "${PODMAN_IMAGE}" = "" ]; then
            echo "No podman_image entry found in ${CONFIG}. Falling back to quay.io/condaforge/linux-anvil-comp7"
            PODMAN_IMAGE="quay.io/condaforge/linux-anvil-comp7"
        fi
    else
        PODMAN_IMAGE="$(cat "${REPO_ROOT}/.ci_support/${CONFIG}.yaml" | shyaml get-value podman_image.0 quay.io/condaforge/linux-anvil-comp7 )"
    fi
fi

mkdir -p "$ARTIFACTS"
DONE_CANARY="$ARTIFACTS/conda-forge-build-done"
rm -f "$DONE_CANARY"

PODMAN_RUN_ARGS="-it ${CONDA_FORGE_PODMAN_RUN_ARGS}"

if [ "${AZURE}" == "True" ]; then
    PODMAN_RUN_ARGS=""
fi
( endgroup "Configure Podman" ) 2> /dev/null

( startgroup "Start Podman" ) 2> /dev/null
# this group is closed in build_steps.sh

podman pull "${PODMAN_IMAGE}"
podman run ${PODMAN_RUN_ARGS} \
           -v "${REPO_ROOT}:/home/conda/staged-recipes" \
           -e HOST_USER_ID=${HOST_USER_ID} \
           -e AZURE=${AZURE} \
           -e CONFIG \
           -e CI \
           -e CPU_COUNT \
           -e DEFAULT_LINUX_VERSION \
           "${PODMAN_IMAGE}" \
           bash \
           "/home/conda/staged-recipes/${PROVIDER_DIR}/build_steps.sh"

# verify that the end of the script was reached
test -f "$DONE_CANARY"

# This closes the last group opened in `build_steps.sh`
( endgroup "Final checks" ) 2> /dev/null
